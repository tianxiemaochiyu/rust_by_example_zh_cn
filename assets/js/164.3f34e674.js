(window.webpackJsonp=window.webpackJsonp||[]).push([[164],{644:function(t,e,n){"use strict";n.r(e);var s=n(4),a=Object(s.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"打开文件-open"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#打开文件-open"}},[t._v("#")]),t._v(" 打开文件 "),n("code",[t._v("open")])]),t._v(" "),n("p",[n("code",[t._v("open")]),t._v(" 静态方法能够以只读模式（read-only mode）打开一个文件。")]),t._v(" "),n("p",[n("code",[t._v("File")]),t._v(" 拥有资源，即文件描述符（file descriptor），它会在自身被 "),n("code",[t._v("drop")]),t._v(" 时关闭文件。")]),t._v(" "),n("div",{staticClass:"language-rust,editable,ignore extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('use std::error::Error;\nuse std::fs::File;\nuse std::io::prelude::*;\nuse std::path::Path;\n\nfn main() {\n    // 创建指向所需的文件的路径\n    let path = Path::new("hello.txt");\n    let display = path.display();\n\n    // 以只读方式打开路径，返回 `io::Result<File>`\n    let mut file = match File::open(&path) {\n        // `io::Error` 的 `description` 方法返回一个描述错误的字符串。\n        Err(why) => panic!("couldn\'t open {}: {}", display,\n                                                   why.description()),\n        Ok(file) => file,\n    };\n\n    // 读取文件内容到一个字符串，返回 `io::Result<usize>`\n    let mut s = String::new();\n    match file.read_to_string(&mut s) {\n        Err(why) => panic!("couldn\'t read {}: {}", display,\n                                                   why.description()),\n        Ok(_) => print!("{} contains:\\n{}", display, s),\n    }\n\n    // `file` 离开作用域，并且 `hello.txt` 文件将被关闭。\n}\n')])])]),n("p",[t._v("下面是所希望的成功的输出：")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("$ "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello World!"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" hello.txt\n$ rustc open.rs "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" ./open\nhello.txt contains:\nHello World"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n")])])]),n("p",[t._v("（我们鼓励您在不同的失败条件下测试前面的例子：hello.txt 不存在，或 hello.txt 不可读，等等。）")])])}),[],!1,null,null,null);e.default=a.exports}}]);