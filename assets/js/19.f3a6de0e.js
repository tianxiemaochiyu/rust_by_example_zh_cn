(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{497:function(t,a,s){"use strict";s.r(a);var e=s(4),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"依赖"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#依赖"}},[t._v("#")]),t._v(" 依赖")]),t._v(" "),s("p",[t._v("大多数程序都会依赖于某些库。如果你曾经手动管理过库依赖，那么你就知道这会带来的极大的痛苦。幸运的是，Rust 的生态链标配 "),s("code",[t._v("cargo")]),t._v(" 工具！"),s("code",[t._v("cargo")]),t._v(" 可以管理项目的依赖关系。")]),t._v(" "),s("p",[t._v("下面创建一个新的 Rust 项目：")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 二进制可执行文件")]),t._v("\ncargo new foo\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 或者库")]),t._v("\ncargo new --lib foo\n")])])]),s("p",[t._v("对于本章的其余部分，我们选定创建的都是二进制可执行文件而不是库，但所有的概念都是相同的。")]),t._v(" "),s("p",[t._v("完成上述命令后，将看到如下内容：")]),t._v(" "),s("div",{staticClass:"language-txt extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("foo\n├── Cargo.toml\n└── src\n    └── main.rs\n")])])]),s("p",[s("code",[t._v("main.rs")]),t._v(" 是新项目的入口源文件——这里没什么新东西。 "),s("code",[t._v("Cargo.toml")]),t._v(" 是本项目（"),s("code",[t._v("foo")]),t._v("）的 "),s("code",[t._v("cargo")]),t._v(" 的配置文件。 浏览 "),s("code",[t._v("Cargo.toml")]),t._v(" 文件，将看到类似以下的的内容：")]),t._v(" "),s("div",{staticClass:"language-toml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-toml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("package")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("name")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"foo"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("version")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0.1.0"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("authors")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mark"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("dependencies")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("p",[s("code",[t._v("package")]),t._v(" 下面的 "),s("code",[t._v("name")]),t._v(" 字段表明项目的名称。 如果您发布 crate（后面将做更多介绍），那么 "),s("code",[t._v("crates.io")]),t._v(" 将使用此字段标明的名称。 这也是编译时输出的二进制可执行文件的名称。")]),t._v(" "),s("p",[s("code",[t._v("version")]),t._v(" 字段是使用"),s("a",{attrs:{href:"http://semver.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("语义版本控制"),s("OutboundLink")],1),t._v("（Semantic\nVersioning）的 crate 版本号。")]),t._v(" "),s("p",[s("code",[t._v("authors")]),t._v(" 字段表明发布 crate 时的作者列表。")]),t._v(" "),s("p",[s("code",[t._v("dependencies")]),t._v(" 这部分可以让你为项目添加依赖。")]),t._v(" "),s("p",[t._v("举个例子，假设我们希望程序有一个很棒的命令行界面（command-line interface，CLI））。 你可以在 "),s("a",{attrs:{href:"https://crates.io",target:"_blank",rel:"noopener noreferrer"}},[t._v("crates.io"),s("OutboundLink")],1),t._v("（官方的 Rust 包注册服务）上找到很多很棒的 Rust 包。其中一个受欢迎的包是 "),s("a",{attrs:{href:"https://crates.io/crates/clap",target:"_blank",rel:"noopener noreferrer"}},[t._v("clap"),s("OutboundLink")],1),t._v("（译注：一个命令行参数的解析器）。在撰写本文时，[clap] 最新发布的版本为 "),s("code",[t._v("2.27.1")]),t._v("。要在程序中添加依赖，我们可以很简单地在 "),s("code",[t._v("Cargo.toml")]),t._v(" 文件中的 "),s("code",[t._v("dependencies")]),t._v(" 项后面将以下内容添加进来 ："),s("code",[t._v('clap = "2.27.1"')]),t._v("。当然，在 "),s("code",[t._v("main.rs")]),t._v(" 文件中写上 "),s("code",[t._v("extern crate clap")]),t._v("，就和平常一样。 就是这样！你就可以在程序中开始使用 "),s("code",[t._v("clap")]),t._v(" 了。")]),t._v(" "),s("p",[s("code",[t._v("cargo")]),t._v(" 还支持"),s("a",{attrs:{href:"https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("其他类型的依赖"),s("OutboundLink")],1),t._v("。 下面是一个简单的示例：")]),t._v(" "),s("div",{staticClass:"language-toml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-toml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("package")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("name")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"foo"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("version")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0.1.0"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("authors")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mark"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("dependencies")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("clap")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2.27.1"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 来自 crates.io")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("rand")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://github.com/rust-lang-nursery/rand"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 来自网上的仓库")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("bar")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("path")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"../bar"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 来自本地文件系统的路径")]),t._v("\n")])])]),s("p",[s("code",[t._v("cargo")]),t._v(" 不仅仅是一个包依赖管理器。"),s("code",[t._v("Cargo.toml")]),t._v(" 的所有可用配置选项都列在 "),s("a",{attrs:{href:"https://doc.rust-lang.org/cargo/reference/manifest.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("格式规范"),s("OutboundLink")],1),t._v("中。")]),t._v(" "),s("p",[t._v("要构建我们的项目，我们可以在项目目录中的任何位置（包括子目录！）执行 "),s("code",[t._v("cargo build")]),t._v("。我们也可以执行 "),s("code",[t._v("cargo run")]),t._v(" 来构建和运行。请注意，这些命令将处理所有依赖，在需要时下载 crate，并构建所有内容，包括 crate。（请注意，它只重新构建尚未构建的内容，这和 "),s("code",[t._v("make")]),t._v(" 类似）。")]),t._v(" "),s("p",[t._v("瞧！这里的所有都和 "),s("code",[t._v("cargo")]),t._v(" 有关！")])])}),[],!1,null,null,null);a.default=n.exports}}]);