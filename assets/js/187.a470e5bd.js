(window.webpackJsonp=window.webpackJsonp||[]).push([[187],{667:function(n,a,t){"use strict";t.r(a);var s=t(4),i=Object(s.a)({},(function(){var n=this,a=n.$createElement,t=n._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h1",{attrs:{id:"类型转换"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#类型转换"}},[n._v("#")]),n._v(" 类型转换")]),n._v(" "),t("p",[n._v("Rust 不提供原生类型之间的隐式类型转换（coercion），但可以使用 "),t("code",[n._v("as")]),n._v(" 关键字进行显\n式类型转换（casting）。")]),n._v(" "),t("p",[n._v("整型之间的转换大体遵循 C 语言的惯例，除了 C 会产生未定义行为的情形。在 Rust 中所\n有整型转换都是定义良好的。")]),n._v(" "),t("div",{staticClass:"language-rust,editable,ignore,mdbook-runnable extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('// 不显示类型转换产生的溢出警告。\n#![allow(overflowing_literals)]\n\nfn main() {\n    let decimal = 65.4321_f32;\n\n    // 错误！不提供隐式转换\n    let integer: u8 = decimal;\n    // 改正 ^ 注释掉这一行\n\n    // 可以显式转换\n    let integer = decimal as u8;\n    let character = integer as char;\n\n    println!("Casting: {} -> {} -> {}", decimal, integer, character);\n\n    // 当把任何类型转换为无符号类型 T 时，会不断加上或减去 (std::T::MAX + 1)\n    // 直到值位于新类型 T 的范围内。\n\n    // 1000 已经在 u16 的范围内\n    println!("1000 as a u16 is: {}", 1000 as u16);\n\n    // 1000 - 256 - 256 - 256 = 232\n    // 事实上的处理方式是：从最低有效位（LSB，least significant bits）开始保留\n    // 8 位，然后剩余位置，直到最高有效位（MSB，most significant bit）都被抛弃。\n    // 译注：MSB 就是二进制的最高位，LSB 就是二进制的最低位，按日常书写习惯就是\n    // 最左边一位和最右边一位。\n    println!("1000 as a u8 is : {}", 1000 as u8);\n    // -1 + 256 = 255\n    println!("  -1 as a u8 is : {}", (-1i8) as u8);\n\n    // 对正数，这就和取模一样。\n    println!("1000 mod 256 is : {}", 1000 % 256);\n\n    // 当转换到有符号类型时，（位操作的）结果就和 “先转换到对应的无符号类型，\n    // 如果 MSB 是 1，则该值为负” 是一样的。\n\n    // 当然如果数值已经在目标类型的范围内，就直接把它放进去。\n    println!(" 128 as a i16 is: {}", 128 as i16);\n    // 128 转成 u8 还是 128，但转到 i8 相当于给 128 取八位的二进制补码，其值是：\n    println!(" 128 as a i8 is : {}", 128 as i8);\n\n    // 重复之前的例子\n    // 1000 as u8 -> 232\n    println!("1000 as a u8 is : {}", 1000 as u8);\n    // 232 的二进制补码是 -24\n    println!(" 232 as a i8 is : {}", 232 as i8);\n}\n')])])])])}),[],!1,null,null,null);a.default=i.exports}}]);