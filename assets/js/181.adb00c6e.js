(window.webpackJsonp=window.webpackJsonp||[]).push([[181],{659:function(t,e,r){"use strict";r.r(e);var n=r(4),a=Object(n.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"推导"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#推导"}},[t._v("#")]),t._v(" 推导")]),t._v(" "),r("p",[t._v("通过 "),r("code",[t._v("#[derive]")]),t._v(" "),r("RouterLink",{attrs:{to:"/attribute.html"}},[t._v("属性")]),t._v("，编译器能够提供某些 trait 的基本实现。如果\n需要更复杂的行为，这些 trait 也可以手动实现。")],1),t._v(" "),r("p",[t._v("下面以下是可以自动推导的 trait：")]),t._v(" "),r("ul",[r("li",[t._v("比较 trait:\n"),r("a",{attrs:{href:"https://doc.rust-lang.org/std/cmp/trait.Eq.html",target:"_blank",rel:"noopener noreferrer"}},[r("code",[t._v("Eq")]),r("OutboundLink")],1),t._v(", "),r("a",{attrs:{href:"https://doc.rust-lang.org/std/cmp/trait.PartialEq.html",target:"_blank",rel:"noopener noreferrer"}},[r("code",[t._v("PartialEq")]),r("OutboundLink")],1),t._v(", "),r("a",{attrs:{href:"https://doc.rust-lang.org/std/cmp/trait.Ord.html",target:"_blank",rel:"noopener noreferrer"}},[r("code",[t._v("Ord")]),r("OutboundLink")],1),t._v(", "),r("a",{attrs:{href:"https://doc.rust-lang.org/std/cmp/trait.PartialOrd.html",target:"_blank",rel:"noopener noreferrer"}},[r("code",[t._v("PartialOrd")]),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://doc.rust-lang.org/std/clone/trait.Clone.html",target:"_blank",rel:"noopener noreferrer"}},[r("code",[t._v("Clone")]),r("OutboundLink")],1),t._v(", 用来从 "),r("code",[t._v("&T")]),t._v(" 创建副本 "),r("code",[t._v("T")]),t._v("。")]),t._v(" "),r("li",[r("a",{attrs:{href:"https://doc.rust-lang.org/core/marker/trait.Copy.html",target:"_blank",rel:"noopener noreferrer"}},[r("code",[t._v("Copy")]),r("OutboundLink")],1),t._v("，使类型具有 “复制语义”（copy semantics）而非 “移动语义”（move semantics）。")]),t._v(" "),r("li",[r("a",{attrs:{href:"https://doc.rust-lang.org/std/hash/trait.Hash.html",target:"_blank",rel:"noopener noreferrer"}},[r("code",[t._v("Hash")]),r("OutboundLink")],1),t._v("，从 "),r("code",[t._v("&T")]),t._v(" 计算哈希值（hash）。")]),t._v(" "),r("li",[r("a",{attrs:{href:"https://doc.rust-lang.org/std/default/trait.Default.html",target:"_blank",rel:"noopener noreferrer"}},[r("code",[t._v("Default")]),r("OutboundLink")],1),t._v(", 创建数据类型的一个空实例。")]),t._v(" "),r("li",[r("a",{attrs:{href:"https://doc.rust-lang.org/std/fmt/trait.Debug.html",target:"_blank",rel:"noopener noreferrer"}},[r("code",[t._v("Debug")]),r("OutboundLink")],1),t._v("，使用 "),r("code",[t._v("{:?}")]),t._v(" formatter 来格式化一个值。")])]),t._v(" "),r("div",{staticClass:"language-rust,editable extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v('// `Centimeters`，可以比较的元组结构体\n#[derive(PartialEq, PartialOrd)]\nstruct Centimeters(f64);\n\n// `Inches`，可以打印的元组结构体\n#[derive(Debug)]\nstruct Inches(i32);\n\nimpl Inches {\n    fn to_centimeters(&self) -> Centimeters {\n        let &Inches(inches) = self;\n\n        Centimeters(inches as f64 * 2.54)\n    }\n}\n\n// `Seconds`，不带附加属性的元组结构体\nstruct Seconds(i32);\n\nfn main() {\n    let _one_second = Seconds(1);\n\n    // 报错：`Seconds` 不能打印；它没有实现 `Debug` trait\n    //println!("One second looks like: {:?}", _one_second);\n    // 试一试 ^ 取消此行注释\n\n    // 报错：`Seconds`不能比较；它没有实现 `PartialEq` trait\n    //let _this_is_true = (_one_second == _one_second);\n    // 试一试 ^ 取消此行注释\n\n    let foot = Inches(12);\n\n    println!("One foot equals {:?}", foot);\n\n    let meter = Centimeters(100.0);\n\n    let cmp =\n        if foot.to_centimeters() < meter {\n            "smaller"\n        } else {\n            "bigger"\n        };\n\n    println!("One foot is {} than one meter.", cmp);\n}\n')])])]),r("h3",{attrs:{id:"参见"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#参见"}},[t._v("#")]),t._v(" 参见")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://doc.rust-lang.org/reference/attributes.html#derive",target:"_blank",rel:"noopener noreferrer"}},[r("code",[t._v("derive")]),r("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=a.exports}}]);