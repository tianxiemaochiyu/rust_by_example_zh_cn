(window.webpackJsonp=window.webpackJsonp||[]).push([[133],{612:function(r,n,t){"use strict";t.r(n);var e=t(4),o=Object(e.a)({},(function(){var r=this,n=r.$createElement,t=r._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[t("h1",{attrs:{id:"生命周期"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#生命周期"}},[r._v("#")]),r._v(" 生命周期")]),r._v(" "),t("p",[t("strong",[r._v("生命周期")]),r._v("（lifetime）是这样一种概念，编译器（中的借用检查器）用它来保证所有的\n借用都是有效的。确切地说，一个变量的生命周期在它创建的时候开始，在它销毁的时候\n结束。虽然生命周期和作用域经常被一起提到，但它们并不相同。")]),r._v(" "),t("p",[r._v("例如考虑这种情况，我们通过 "),t("code",[r._v("&")]),r._v(" 来借用一个变量。该借用拥有一个生命周期，此生命\n周期由它声明的位置决定。于是，只要该借用在出借者（lender）被销毁前结束，借用\n就是有效的。然而，借用的作用域则是由使用引用的位置决定的。")]),r._v(" "),t("p",[r._v("在下面的例子和本章节剩下的内容里，我们将看到生命周期和作用域的联系与区别。")]),r._v(" "),t("blockquote",[t("p",[r._v("译注：如果代码中的生命周期示意图乱掉了，请把它复制到任何编辑器中，用等宽字体\n查看。为避免中文的显示问题，下面一些注释没有翻译。")])]),r._v(" "),t("div",{staticClass:"language-rust,editable extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[r._v('// 下面使用连线来标注各个变量的创建和销毁，从而显示出生命周期。\n// `i` 的生命周期最长，因为它的作用域完全覆盖了 `borrow1` 和\n// `borrow2` 的。`borrow1` 和 `borrow2` 的周期没有关联，\n// 因为它们各不相交。\nfn main() {\n    let i = 3; // Lifetime for `i` starts. ────────────────┐\n    //                                                     │\n    { //                                                   │\n        let borrow1 = &i; // `borrow1` lifetime starts. ──┐│\n        //                                                ││\n        println!("borrow1: {}", borrow1); //              ││\n    } // `borrow1 ends. ──────────────────────────────────┘│\n    //                                                     │\n    //                                                     │\n    { //                                                   │\n        let borrow2 = &i; // `borrow2` lifetime starts. ──┐│\n        //                                                ││\n        println!("borrow2: {}", borrow2); //              ││\n    } // `borrow2` ends. ─────────────────────────────────┘│\n    //                                                     │\n}   // Lifetime ends. ─────────────────────────────────────┘\n')])])]),t("p",[r._v("注意到这里没有用到名称或类型来标注生命周期，这限制了生命周期的用法，在后面我们\n将会看到生命周期更强大的功能。")])])}),[],!1,null,null,null);n.default=o.exports}}]);