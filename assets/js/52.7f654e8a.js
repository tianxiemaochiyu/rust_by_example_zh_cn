(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{529:function(t,e,r){"use strict";r.r(e);var n=r(4),s=Object(n.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"给-result-取别名"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#给-result-取别名"}},[t._v("#")]),t._v(" 给 "),r("code",[t._v("Result")]),t._v(" 取别名")]),t._v(" "),r("p",[t._v("当我们要重用某个 "),r("code",[t._v("Result")]),t._v(" 类型时，该怎么办呢？回忆一下，Rust 允许我们\n创建"),r("RouterLink",{attrs:{to:"/types/alias.html"}},[t._v("别名")]),t._v("。若某个 "),r("code",[t._v("Result")]),t._v(" 有可能被重用，我们可以方便地给它取一个别名。")],1),t._v(" "),r("p",[t._v("在模块的层面上创建别名特别有帮助。同一模块中的错误常常会有相同的 "),r("code",[t._v("Err")]),t._v(" 类\n型，所以单个别名就能简便地定义"),r("strong",[t._v("所有")]),t._v("相关的 "),r("code",[t._v("Result")]),t._v("。这太有用了，以至于标准库\n也提供了一个别名： "),r("a",{attrs:{href:"https://doc.rust-lang.org/std/io/type.Result.html",target:"_blank",rel:"noopener noreferrer"}},[r("code",[t._v("io::Result")]),r("OutboundLink")],1),t._v("！")]),t._v(" "),r("p",[t._v("下面给出一个简短的示例来展示语法：")]),t._v(" "),r("div",{staticClass:"language-rust,editable extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v('use std::num::ParseIntError;\n\n// 为带有错误类型 `ParseIntError` 的 `Result` 定义一个泛型别名。\ntype AliasedResult<T> = Result<T, ParseIntError>;\n\n// 使用上面定义过的别名来表示上一节中的 `Result<i32,ParseIntError>` 类型。\nfn multiply(first_number_str: &str, second_number_str: &str) -> AliasedResult<i32> {\n    first_number_str.parse::<i32>().and_then(|first_number| {\n        second_number_str.parse::<i32>().map(|second_number| first_number * second_number)\n    })\n}\n\n// 在这里使用别名又让我们节省了一些代码量。\nfn print(result: AliasedResult<i32>) {\n    match result {\n        Ok(n)  => println!("n is {}", n),\n        Err(e) => println!("Error: {}", e),\n    }\n}\n\nfn main() {\n    print(multiply("10", "2"));\n    print(multiply("t", "2"));\n}\n')])])]),r("h3",{attrs:{id:"参见："}},[r("a",{staticClass:"header-anchor",attrs:{href:"#参见："}},[t._v("#")]),t._v(" 参见：")]),t._v(" "),r("p",[t._v("["),r("code",[t._v("Result")]),t._v("][result] 和 "),r("a",{attrs:{href:"https://doc.rust-lang.org/std/io/type.Result.html",target:"_blank",rel:"noopener noreferrer"}},[r("code",[t._v("io::Result")]),r("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=s.exports}}]);