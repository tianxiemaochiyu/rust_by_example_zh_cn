(window.webpackJsonp=window.webpackJsonp||[]).push([[192],{671:function(n,t,e){"use strict";e.r(t);var i=e(4),a=Object(i.a)({},(function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("h1",{attrs:{id:"变量先声明"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#变量先声明"}},[n._v("#")]),n._v(" 变量先声明")]),n._v(" "),e("p",[n._v("可以先声明（declare）变量绑定，后面才将它们初始化（initialize）。但是这种做法很\n少用，因为这样可能导致使用未初始化的变量。")]),n._v(" "),e("div",{staticClass:"language-rust,editable,ignore,mdbook-runnable extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('fn main() {\n    // 声明一个变量绑定\n    let a_binding;\n\n    {\n        let x = 2;\n\n        // 初始化一个绑定\n        a_binding = x * x;\n    }\n\n    println!("a binding: {}", a_binding);\n\n    let another_binding;\n\n    // 报错！使用了未初始化的绑定\n    println!("another binding: {}", another_binding);\n    // 改正 ^ 注释掉此行\n\n    another_binding = 1;\n\n    println!("another binding: {}", another_binding);\n}\n')])])]),e("p",[n._v("编译器禁止使用未经初始化的变量，因为这会产生未定义行为（undefined behavior）。")])])}),[],!1,null,null,null);t.default=a.exports}}]);