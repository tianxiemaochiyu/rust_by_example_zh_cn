(window.webpackJsonp=window.webpackJsonp||[]).push([[193],{670:function(n,t,e){"use strict";e.r(t);var a=e(4),i=Object(a.a)({},(function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("h1",{attrs:{id:"可变变量"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#可变变量"}},[n._v("#")]),n._v(" 可变变量")]),n._v(" "),e("p",[n._v("变量绑定默认是不可变的（immutable），但加上 "),e("code",[n._v("mut")]),n._v(" 修饰语后变量就可以改变。")]),n._v(" "),e("div",{staticClass:"language-rust,editable,ignore,mdbook-runnable extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('fn main() {\n    let _immutable_binding = 1;\n    let mut mutable_binding = 1;\n\n    println!("Before mutation: {}", mutable_binding);\n\n    // 正确代码\n    mutable_binding += 1;\n\n    println!("After mutation: {}", mutable_binding);\n\n    // 错误！\n    _immutable_binding += 1;\n    // 改正 ^ 将此行注释掉\n}\n')])])]),e("p",[n._v("编译器会给出关于变量可变性的详细诊断信息。")])])}),[],!1,null,null,null);t.default=i.exports}}]);