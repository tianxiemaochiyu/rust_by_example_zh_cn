(window.webpackJsonp=window.webpackJsonp||[]).push([[111],{593:function(t,n,e){"use strict";e.r(n);var r=e(4),s=Object(r.a)({},(function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"重载"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#重载"}},[t._v("#")]),t._v(" 重载")]),t._v(" "),e("p",[t._v("宏可以重载，从而接受不同的参数组合。在这方面，"),e("code",[t._v("macro_rules!")]),t._v(" 的作用类似于\n匹配（match）代码块：")]),t._v(" "),e("div",{staticClass:"language-rust,editable extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('// 根据你调用它的方式，`test!` 将以不同的方式来比较 `$left` 和 `$right`。\nmacro_rules! test {\n    // 参数不需要使用逗号隔开。\n    // 参数可以任意组合！\n    ($left:expr; and $right:expr) => (\n        println!("{:?} and {:?} is {:?}",\n                 stringify!($left),\n                 stringify!($right),\n                 $left && $right)\n    );\n    // ^ 每个分支都必须以分号结束。\n    ($left:expr; or $right:expr) => (\n        println!("{:?} or {:?} is {:?}",\n                 stringify!($left),\n                 stringify!($right),\n                 $left || $right)\n    );\n}\n\nfn main() {\n    test!(1i32 + 1 == 2i32; and 2i32 * 2 == 4i32);\n    test!(true; or false);\n}\n')])])])])}),[],!1,null,null,null);n.default=s.exports}}]);