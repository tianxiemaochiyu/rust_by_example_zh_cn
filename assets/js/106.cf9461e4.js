(window.webpackJsonp=window.webpackJsonp||[]).push([[106],{584:function(t,r,e){"use strict";e.r(r);var o=e(4),n=Object(o.a)({},(function(){var t=this,r=t.$createElement,e=t._self._c||r;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"通过例子学-rust"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#通过例子学-rust"}},[t._v("#")]),t._v(" 通过例子学 Rust")]),t._v(" "),e("blockquote",[e("p",[t._v("Chinese translation of the "),e("a",{attrs:{href:"https://doc.rust-lang.org/rust-by-example/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Rust By Example"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("本文档按照 "),e("a",{attrs:{href:"https://rustwiki.org/zh-CN/rust-wiki/translate/rust-translation-guide.html",target:"_blank",rel:"noopener noreferrer"}},[e("strong",[t._v("Rust 文档翻译指引")]),e("OutboundLink")],1),t._v("规范进行翻译。"),e("br"),t._v("\n《通过例子学 Rust》(Rust By Example 中文版)翻译自 "),e("a",{attrs:{href:"https://doc.rust-lang.org/rust-by-example/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Rust By Example"),e("OutboundLink")],1),t._v("，内容已全部翻译完成，中文版最后更新时间：2019-5-3。查看此书的 "),e("a",{attrs:{href:"https://github.com/rust-lang-cn/rust-by-example-cn",target:"_blank",rel:"noopener noreferrer"}},[t._v("Github 翻译项目"),e("OutboundLink")],1),t._v("。")])]),t._v(" "),e("p",[e("a",{attrs:{href:"http://www.rust-lang.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Rust"),e("OutboundLink")],1),t._v(" 是一门注重安全（safety）、速度（speed）和并发（concurrency）的现代系统编程语言。Rust 通过内存安全来实现以上目标，但不用垃圾回收机制（garbage collection, GC)。")]),t._v(" "),e("p",[t._v("《通过例子学 Rust》（Rust By Example, RBE）内容由一系列可运行的实例组成，通过这些例子阐明了各种 Rust 的概念和基本库。想获取这些例子外的更多内容，不要忘了"),e("a",{attrs:{href:"https://www.rust-lang.org/tools/install",target:"_blank",rel:"noopener noreferrer"}},[t._v("安装 Rust 到本地"),e("OutboundLink")],1),t._v("并查阅"),e("a",{attrs:{href:"http://doc.rust-lang.org/std/",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方标准库文档"),e("OutboundLink")],1),t._v("。另外为了满足您的好奇心，你可以"),e("a",{attrs:{href:"https://github.com/rust-lang-cn/rust-by-example-cn",target:"_blank",rel:"noopener noreferrer"}},[t._v("查阅本网站的源代码"),e("OutboundLink")],1),t._v("。")]),t._v(" "),e("p",[t._v("现在让我们开始学习吧！")]),t._v(" "),e("ul",[e("li",[e("p",[e("RouterLink",{attrs:{to:"/hello.html"}},[t._v("Hello World")]),t._v(" - 从经典的 “Hello World” 程序开始学习。")],1)]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/primitives.html"}},[t._v("原生类型")]),t._v(" - 学习有符号整型，无符号整型和其他原生类型。")],1)]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/custom_types.html"}},[t._v("自定义类型")]),t._v(" - 结构体 "),e("code",[t._v("struct")]),t._v(" 和 枚举 "),e("code",[t._v("enum")]),t._v("。")],1)]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/variable_bindings.html"}},[t._v("变量绑定")]),t._v(" - 变量绑定，作用域，变量遮蔽。")],1)]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/types.html"}},[t._v("类型系统")]),t._v(" - 学习改变和定义类型。")],1)]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/conversion.html"}},[t._v("类型转换")])],1)]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/expression.html"}},[t._v("表达式")])],1)]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/flow_control.html"}},[t._v("流程控制")]),t._v(" - "),e("code",[t._v("if")]),t._v("/"),e("code",[t._v("else")]),t._v("，"),e("code",[t._v("for")]),t._v("，以及其他流程控制有关内容。")],1)]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/fn.html"}},[t._v("函数")]),t._v(" - 学习方法、闭包和高阶函数。")],1)]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/mod.html"}},[t._v("模块")]),t._v(" - 使用模块来组织代码。")],1)]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/crates.html"}},[e("code",[t._v("crate")])]),t._v(" - crate 是 Rust 中的编译单元。学习创建一个库。")],1)]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/cargo.html"}},[t._v("cargo")]),t._v(" - 学习官方的 Rust 包管理工具的一些基本功能。")],1)]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/attribute.html"}},[t._v("属性")]),t._v(" - 属性是应用于某些模块、crate 或项的元数据（metadata）。")],1)]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/generics.html"}},[t._v("泛型")]),t._v(" - 学习编写能够适用于多类型参数的函数或数据类型。")],1)]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/scope.html"}},[t._v("作用域规则")]),t._v(" - 作用域在所有权（ownership）、借用（borrowing）和生命周期（lifetime）中起着重要作用。")],1)]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/trait.html"}},[t._v("特性 trait")]),t._v(" - trait 是对未知类型("),e("code",[t._v("Self")]),t._v(")定义的方法集。")],1)]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/macros.html"}},[t._v("宏")])],1)]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/error.html"}},[t._v("错误处理")]),t._v(" - 学习 Rust 语言处理失败的方式。")],1)]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/std.html"}},[t._v("标准库类型")]),t._v(" - 学习 "),e("code",[t._v("std")]),t._v(" 标准库提供的一些自定义类型。")],1)]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/std_misc.html"}},[t._v("标准库更多介绍")]),t._v(" - 更多关于文件处理、线程的自定义类型。")],1)]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/testing.html"}},[t._v("测试")]),t._v(" - Rust 语言的各种测试手段。")],1)]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/unsafe.html"}},[t._v("不安全操作")])],1)]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/compatibility.html"}},[t._v("兼容性")])],1)]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/meta.html"}},[t._v("补充")]),t._v(" - 文档和基准测试")],1)])])])}),[],!1,null,null,null);r.default=n.exports}}]);