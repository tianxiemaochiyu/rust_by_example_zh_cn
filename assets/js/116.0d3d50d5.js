(window.webpackJsonp=window.webpackJsonp||[]).push([[116],{591:function(n,e,t){"use strict";t.r(e);var r=t(4),s=Object(r.a)({},(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h1",{attrs:{id:"文档"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#文档"}},[n._v("#")]),n._v(" 文档")]),n._v(" "),t("p",[n._v("文档注释对于需要文档的大型项目来说非常重要。当运行 "),t("a",{attrs:{href:"http://doc.rust-lang.org/book/documentation.html",target:"_blank",rel:"noopener noreferrer"}},[n._v("Rustdoc"),t("OutboundLink")],1),n._v("，文档注释就会\n编译成文档。它们使用 "),t("code",[n._v("///")]),n._v(" 标记，并支持 "),t("a",{attrs:{href:"https://en.wikipedia.org/wiki/Markdown",target:"_blank",rel:"noopener noreferrer"}},[t("code",[n._v("Markdown")]),t("OutboundLink")],1),n._v("。")]),n._v(" "),t("div",{staticClass:"language-rust,editable,ignore,mdbook-runnable extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('#![crate_name = "doc"]\n\n/// 这里给出一个人类\npub struct Person {\n    /// 一个人必须有名字，不管 Juliet 多讨厌他/她。\n    name: String,\n}\n\nimpl Person {\n    /// 返回具有指定名字的一个人\n    ///\n    /// # 参数\n    ///\n    /// * `name` - 字符串切片，代表人物的名称\n    ///\n    /// # 示例\n    ///\n    /// ```\n    /// // 在文档注释中，你可以书写代码块\n    /// // 如果向 Rustdoc 传递 --test 参数，它还会帮你测试注释文档中的代码！\n    /// use doc::Person;\n    /// let person = Person::new("name");\n    /// ```\n    pub fn new(name: &str) -> Person {\n        Person {\n            name: name.to_string(),\n        }\n    }\n\n    /// 给一个友好的问候！\n    /// 对被叫到的 `Person` 说 "Hello, [name]" 。\n    pub fn hello(& self) {\n        println!("Hello, {}!", self.name);\n    }\n}\n\nfn main() {\n    let john = Person::new("John");\n\n    john.hello();\n}\n')])])]),t("p",[n._v("要运行测试，首先将代码构建为库，然后告诉 "),t("code",[n._v("rustdoc")]),n._v(" 在哪里找到库，这样它就可以\n使每个文档中的程序链接到库：")]),n._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[n._v("$ rustc doc.rs --crate-type lib\n$ rustdoc --test --extern "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("doc")]),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[n._v('"libdoc.rlib"')]),n._v(" doc.rs\n")])])]),t("p",[n._v("（当你对库 crate 上运行 "),t("code",[n._v("cargo test")]),n._v(" 时，Cargo 将自动生成并运行正确的 "),t("code",[n._v("rustc")]),n._v("\n和 "),t("code",[n._v("rustdoc")]),n._v(" 命令。）")])])}),[],!1,null,null,null);e.default=s.exports}}]);