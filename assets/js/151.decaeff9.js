(window.webpackJsonp=window.webpackJsonp||[]).push([[151],{628:function(n,i,e){"use strict";e.r(i);var o=e(4),t=Object(o.a)({},(function(){var n=this,i=n.$createElement,e=n._self._c||i;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("h1",{attrs:{id:"选项-option"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#选项-option"}},[n._v("#")]),n._v(" 选项 "),e("code",[n._v("Option")])]),n._v(" "),e("p",[n._v("有时候想要捕捉到程序某部分的失败信息，而不是调用 "),e("code",[n._v("panic!")]),n._v("；这可使用 "),e("code",[n._v("Option")]),n._v("\n枚举类型来实现。")]),n._v(" "),e("p",[e("code",[n._v("Option<T>")]),n._v(" 有两个变量：")]),n._v(" "),e("ul",[e("li",[e("code",[n._v("None")]),n._v("，表明失败或缺少值")]),n._v(" "),e("li",[e("code",[n._v("Some(value)")]),n._v("，元组结构体，封装了一个 "),e("code",[n._v("T")]),n._v(" 类型的值 "),e("code",[n._v("value")])])]),n._v(" "),e("div",{staticClass:"language-rust,editable,ignore,mdbook-runnable extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('// 不会 `panic!` 的整数除法。\nfn checked_division(dividend: i32, divisor: i32) -> Option<i32> {\n    if divisor == 0 {\n        // 失败表示成 `None` 取值\n        None\n    } else {\n        // 结果 Result 被包装到 `Some` 取值中\n        Some(dividend / divisor)\n    }\n}\n\n// 此函数处理可能失败的除法\nfn try_division(dividend: i32, divisor: i32) {\n    // `Option` 值可以进行模式匹配，就和其他枚举类型一样\n    match checked_division(dividend, divisor) {\n        None => println!("{} / {} failed!", dividend, divisor),\n        Some(quotient) => {\n            println!("{} / {} = {}", dividend, divisor, quotient)\n        },\n    }\n}\n\nfn main() {\n    try_division(4, 2);\n    try_division(1, 0);\n\n    // 绑定 `None` 到一个变量需要类型标注\n    let none: Option<i32> = None;\n    let _equivalent_none = None::<i32>;\n\n    let optional_float = Some(0f32);\n\n    // 解包 `Some` 将取出被包装的值。\n    println!("{:?} unwraps to {:?}", optional_float, optional_float.unwrap());\n\n    // 解包 `None` 将会引发 `panic!`。\n    println!("{:?} unwraps to {:?}", none, none.unwrap());\n}\n')])])])])}),[],!1,null,null,null);i.default=t.exports}}]);