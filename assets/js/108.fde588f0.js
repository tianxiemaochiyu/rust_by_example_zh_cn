(window.webpackJsonp=window.webpackJsonp||[]).push([[108],{585:function(n,e,t){"use strict";t.r(e);var _=t(4),r=Object(_.a)({},(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h1",{attrs:{id:"指示符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#指示符"}},[n._v("#")]),n._v(" 指示符")]),n._v(" "),t("p",[n._v("宏的参数使用一个美元符号 "),t("code",[n._v("$")]),n._v(" 作为前缀，并使用一个"),t("strong",[n._v("指示符")]),n._v("（designator）来\n注明类型：")]),n._v(" "),t("div",{staticClass:"language-rust,editable extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('macro_rules! create_function {\n    // 此宏接受一个 `ident` 指示符表示的参数，并创建一个名为 `$func_name` 的函数。\n    // `ident` 指示符用于变量名或函数名\n    ($func_name:ident) => (\n        fn $func_name() {\n            // `stringify!` 宏把 `ident` 转换成字符串。\n            println!("You called {:?}()",\n                     stringify!($func_name))\n        }\n    )\n}\n\n// 借助上述宏来创建名为 `foo` 和 `bar` 的函数。\ncreate_function!(foo);\ncreate_function!(bar);\n\nmacro_rules! print_result {\n    // 此宏接受一个 `expr` 类型的表达式，并将它作为字符串，连同其结果一起\n    // 打印出来。\n    // `expr` 指示符表示表达式。\n    ($expression:expr) => (\n        // `stringify!` 把表达式*原样*转换成一个字符串。\n        println!("{:?} = {:?}",\n                 stringify!($expression),\n                 $expression)\n    )\n}\n\nfn main() {\n    foo();\n    bar();\n\n    print_result!(1u32 + 1);\n\n    // 回想一下，代码块也是表达式！\n    print_result!({\n        let x = 1u32;\n\n        x * x + 2 * x - 1\n    });\n}\n')])])]),t("p",[n._v("这里列出全部指示符：")]),n._v(" "),t("ul",[t("li",[t("code",[n._v("block")])]),n._v(" "),t("li",[t("code",[n._v("expr")]),n._v(" 用于表达式")]),n._v(" "),t("li",[t("code",[n._v("ident")]),n._v(" 用于变量名或函数名")]),n._v(" "),t("li",[t("code",[n._v("item")])]),n._v(" "),t("li",[t("code",[n._v("pat")]),n._v(" ("),t("strong",[n._v("模式")]),n._v(" "),t("em",[n._v("pattern")]),n._v(")")]),n._v(" "),t("li",[t("code",[n._v("path")])]),n._v(" "),t("li",[t("code",[n._v("stmt")]),n._v(" ("),t("strong",[n._v("语句")]),n._v(" "),t("em",[n._v("statement")]),n._v(")")]),n._v(" "),t("li",[t("code",[n._v("tt")]),n._v(" ("),t("strong",[n._v("标记树")]),n._v(" "),t("em",[n._v("token tree")]),n._v(")")]),n._v(" "),t("li",[t("code",[n._v("ty")]),n._v(" ("),t("strong",[n._v("类型")]),n._v(" "),t("em",[n._v("type")]),n._v(")")])])])}),[],!1,null,null,null);e.default=r.exports}}]);