(window.webpackJsonp=window.webpackJsonp||[]).push([[94],{573:function(t,n,e){"use strict";e.r(n);var r=e(4),a=Object(r.a)({},(function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"多重约束"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#多重约束"}},[t._v("#")]),t._v(" 多重约束")]),t._v(" "),e("p",[t._v("多重约束（multiple bounds）可以用 "),e("code",[t._v("+")]),t._v(" 连接。和平常一样，类型之间使用 "),e("code",[t._v(",")]),t._v(" 隔开。")]),t._v(" "),e("div",{staticClass:"language-rust,editable extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('use std::fmt::{Debug, Display};\n\nfn compare_prints<T: Debug + Display>(t: &T) {\n    println!("Debug: `{:?}`", t);\n    println!("Display: `{}`", t);\n}\n\nfn compare_types<T: Debug, U: Debug>(t: &T, u: &U) {\n    println!("t: `{:?}", t);\n    println!("u: `{:?}", u);\n}\n\nfn main() {\n    let string = "words";\n    let array = [1, 2, 3];\n    let vec = vec![1, 2, 3];\n\n    compare_prints(&string);\n    //compare_prints(&array);\n    // 试一试 ^ 将此行注释去掉。\n\n    compare_types(&array, &vec);\n}\n')])])]),e("h3",{attrs:{id:"参见："}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参见："}},[t._v("#")]),t._v(" 参见：")]),t._v(" "),e("p",[e("RouterLink",{attrs:{to:"/hello/print.html"}},[e("code",[t._v("std::fmt")])]),t._v(" 和 "),e("RouterLink",{attrs:{to:"/trait.html"}},[e("code",[t._v("trait")])])],1)])}),[],!1,null,null,null);n.default=a.exports}}]);