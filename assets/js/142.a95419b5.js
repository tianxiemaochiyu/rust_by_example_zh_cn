(window.webpackJsonp=window.webpackJsonp||[]).push([[142],{621:function(t,a,e){"use strict";e.r(a);var n=e(4),r=Object(n.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"trait"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#trait"}},[t._v("#")]),t._v(" trait")]),t._v(" "),e("p",[t._v("trait 方法中生命期的标注基本上与函数类似。注意，"),e("code",[t._v("impl")]),t._v(" 也可能有生命周期的标注。")]),t._v(" "),e("div",{staticClass:"language-rust,editable extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("// 带有生命周期标注的结构体。\n#[derive(Debug)]\n struct Borrowed<'a> {\n     x: &'a i32,\n }\n\n// 给 impl 标注生命周期。\nimpl<'a> Default for Borrowed<'a> {\n    fn default() -> Self {\n        Self {\n            x: &10,\n        }\n    }\n}\n\nfn main() {\n    let b: Borrowed = Default::default();\n    println!(\"b is {:?}\", b);\n}\n")])])]),e("h3",{attrs:{id:"参见："}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参见："}},[t._v("#")]),t._v(" 参见：")]),t._v(" "),e("p",[e("RouterLink",{attrs:{to:"/trait.html"}},[e("code",[t._v("trait")])])],1)])}),[],!1,null,null,null);a.default=r.exports}}]);