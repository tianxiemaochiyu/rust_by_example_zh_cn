(window.webpackJsonp=window.webpackJsonp||[]).push([[91],{572:function(n,e,t){"use strict";t.r(e);var s=t(4),_=Object(s.a)({},(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h1",{attrs:{id:"函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#函数"}},[n._v("#")]),n._v(" 函数")]),n._v(" "),t("p",[n._v("同样的规则也适用于函数：在使用类型 "),t("code",[n._v("T")]),n._v(" 前给出 "),t("code",[n._v("<T>")]),n._v("，那么 "),t("code",[n._v("T")]),n._v(" 就变成了泛型。")]),n._v(" "),t("p",[n._v("调用泛型函数有时需要显式地指明类型参量。这可能是因为调用了返回类型是泛型的\n函数，或者编译器没有足够的信息来推断类型参数。")]),n._v(" "),t("p",[n._v("调用函数时，使用显式指定的类型参数会像是这样："),t("code",[n._v("fun::<A, B, ...>()")]),n._v("。")]),n._v(" "),t("div",{staticClass:"language-rust,editable extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("struct A;          // 具体类型 `A`。\nstruct S(A);       // 具体类型 `S`。\nstruct SGen<T>(T); // 泛型类型 `SGen`。\n\n// 下面全部函数都得到了变量的所有权，并立即使之离开作用域，将变量释放。\n\n// 定义一个函数 `reg_fn`，接受一个 `S` 类型的参数 `_s`。\n// 因为没有 `<T>` 这样的泛型类型参数，所以这不是泛型函数。\nfn reg_fn(_s: S) {}\n\n// 定义一个函数 `gen_spec_t`，接受一个 `SGen<A>` 类型的参数 `_s`。\n// `SGen<>` 显式地接受了类型参数 `A`，且在 `gen_spec_t` 中，`A` 没有被用作\n// 泛型类型参数，所以函数不是泛型的。\nfn gen_spec_t(_s: SGen<A>) {}\n\n// 定义一个函数 `gen_spec_i32`，接受一个 `SGen<i32>` 类型的参数 `_s`。\n// `SGen<>` 显式地接受了类型参量 `i32`，而 `i32` 是一个具体类型。\n// 由于 `i32` 不是一个泛型类型，所以这个函数也不是泛型的。\nfn gen_spec_i32(_s: SGen<i32>) {}\n\n// 定义一个函数 `generic`，接受一个 `SGen<T>` 类型的参数 `_s`。\n// 因为 `SGen<T>` 之前有 `<T>`，所以这个函数是关于 `T` 的泛型函数。\nfn generic<T>(_s: SGen<T>) {}\n\nfn main() {\n    // 使用非泛型函数\n    reg_fn(S(A));          // 具体类型。\n    gen_spec_t(SGen(A));   // 隐式地指定类型参数 `A`。\n    gen_spec_i32(SGen(6)); // 隐式地指定类型参数 `i32`。\n\n    // 为 `generic()` 显式地指定类型参数 `char`。\n    generic::<char>(SGen('a'));\n\n    // 为 `generic()` 隐式地指定类型参数 `char`。\n    generic(SGen('c'));\n}\n")])])]),t("h3",{attrs:{id:"参见："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参见："}},[n._v("#")]),n._v(" 参见：")]),n._v(" "),t("p",[t("RouterLink",{attrs:{to:"/fn.html"}},[n._v("函数")]),n._v(" 和 "),t("RouterLink",{attrs:{to:"/custom_types/structs.html"}},[t("code",[n._v("structs")])])],1)])}),[],!1,null,null,null);e.default=_.exports}}]);