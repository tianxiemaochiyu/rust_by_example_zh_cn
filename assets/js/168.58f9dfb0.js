(window.webpackJsonp=window.webpackJsonp||[]).push([[168],{647:function(t,e,a){"use strict";a.r(e);var n=a(4),s=Object(n.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"路径"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#路径"}},[t._v("#")]),t._v(" 路径")]),t._v(" "),a("p",[a("code",[t._v("Path")]),t._v(" 结构体代表了底层文件系统的文件路径。"),a("code",[t._v("Path")]),t._v(" 分为两种："),a("code",[t._v("posix::Path")]),t._v("，针对\n类 UNIX 系统；以及 "),a("code",[t._v("windows::Path")]),t._v("，针对 Windows。prelude 会选择并输出符合平台类型\n的 "),a("code",[t._v("Path")]),t._v(" 种类。")]),t._v(" "),a("blockquote",[a("p",[t._v("译注：prelude 是 Rust 自动地在每个程序中导入的一些通用的东西，这样我们就不必每写\n一个程序就手动导入一番。")])]),t._v(" "),a("p",[a("code",[t._v("Path")]),t._v(" 可从 "),a("code",[t._v("OsStr")]),t._v(" 类型创建，并且它提供数种方法，用于获取路径指向的文件/目录\n的信息。")]),t._v(" "),a("p",[t._v("注意 "),a("code",[t._v("Path")]),t._v(" 在内部并不是用 UTF-8 字符串表示的，而是存储为若干字节（"),a("code",[t._v("Vec<u8>")]),t._v("）的\nvector。因此，将 "),a("code",[t._v("Path")]),t._v(" 转化成 "),a("code",[t._v("&str")]),t._v(" 并非零开销的（free），且可能失败（因此它\n返回一个 "),a("code",[t._v("Option")]),t._v("）。")]),t._v(" "),a("div",{staticClass:"language-rust,editable extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('use std::path::Path;\n\nfn main() {\n    // 从 `&\'static str` 创建一个 `Path`\n    let path = Path::new(".");\n\n    // `display` 方法返回一个可显示（showable）的结构体\n    let display = path.display();\n\n    // `join` 使用操作系统特定的分隔符来合并路径到一个字节容器，并返回新的路径\n    let new_path = path.join("a").join("b");\n\n    // 将路径转换成一个字符串切片\n    match new_path.to_str() {\n        None => panic!("new path is not a valid UTF-8 sequence"),\n        Some(s) => println!("new path is {}", s),\n    }\n}\n')])])]),a("p",[t._v("记得看看其他的 "),a("code",[t._v("Path")]),t._v(" 方法（"),a("code",[t._v("posix::Path")]),t._v(" 或 "),a("code",[t._v("windows::Path")]),t._v(" 的），还有\n"),a("code",[t._v("Metadata")]),t._v(" 结构体类型。")]),t._v(" "),a("h3",{attrs:{id:"参见"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参见"}},[t._v("#")]),t._v(" 参见")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://doc.rust-lang.org/std/ffi/struct.OsStr.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("OsStr"),a("OutboundLink")],1),t._v(" 和 "),a("a",{attrs:{href:"https://doc.rust-lang.org/std/fs/struct.Metadata.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Metadata"),a("OutboundLink")],1),t._v("。")])])}),[],!1,null,null,null);e.default=s.exports}}]);