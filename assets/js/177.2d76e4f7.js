(window.webpackJsonp=window.webpackJsonp||[]).push([[177],{656:function(t,s,e){"use strict";e.r(s);var a=e(4),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"集成测试"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#集成测试"}},[t._v("#")]),t._v(" 集成测试")]),t._v(" "),e("p",[e("RouterLink",{attrs:{to:"/testing/unit_testing.html"}},[t._v("单元测试")]),t._v("一次仅能单独测试一个模块，这种测试是小规模的，并且能测试私有\n代码；集成测试是 crate 外部的测试，并且仅使用 crate 的公共接口，就像其他使用\n该 crate 的程序那样。集成测试的目的是检验你的库的各部分是否能够正确地协同工作。")],1),t._v(" "),e("p",[t._v("cargo 在与 "),e("code",[t._v("src")]),t._v(" 同级别的 "),e("code",[t._v("tests")]),t._v(" 目录寻找集成测试。")]),t._v(" "),e("p",[t._v("文件 "),e("code",[t._v("src/lib.rs")]),t._v("：")]),t._v(" "),e("div",{staticClass:"language-rust,ignore extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("// 假设这个 crate 叫做 adder，我们需要在集成测试中用 extern 说明。\npub fn add(a: i32, b: i32) -> i32 {\n    a + b\n}\n")])])]),e("p",[t._v("包含测试的文件："),e("code",[t._v("tests/integration_test.rs")]),t._v("：")]),t._v(" "),e("div",{staticClass:"language-rust,ignore extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("// 声明被测试的外部 crate，就像其他使用该 crate 的程序要声明的那样。\nextern crate adder;\n\n#[test]\nfn test_add() {\n    assert_eq!(adder::add(3, 2), 5);\n}\n")])])]),e("p",[t._v("使用 "),e("code",[t._v("cargo test")]),t._v(" 命令：")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ cargo "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v("\nrunning "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" tests\n\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v(" result: ok. "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" passed"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" failed"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" ignored"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" measured"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" filtered out\n\n     Running target/debug/deps/integration_test-bcd60824f5fbfe19\n\nrunning "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v(" test_add "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". ok\n\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v(" result: ok. "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" passed"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" failed"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" ignored"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" measured"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" filtered out\n\n   Doc-tests adder\n\nrunning "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" tests\n\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v(" result: ok. "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" passed"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" failed"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" ignored"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" measured"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" filtered out\n")])])]),e("p",[e("code",[t._v("tests")]),t._v(" 目录中的每一个 Rust 源文件都被编译成一个单独的 crate。在集成测试中要想\n共享代码，一种方式是创建具有公用函数的模块，然后在测试中导入并使用它。")]),t._v(" "),e("p",[t._v("文件 "),e("code",[t._v("tests/common.rs")]),t._v(":")]),t._v(" "),e("div",{staticClass:"language-rust,ignore extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("pub fn setup() {\n    // 一些配置代码，比如创建文件/目录，开启服务器等等。\n}\n")])])]),e("p",[t._v("包含测试的文件："),e("code",[t._v("tests/integration_test.rs")])]),t._v(" "),e("div",{staticClass:"language-rust,ignore extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("// 被测试的外部 crate。\nextern crate adder;\n\n// 导入共用模块。\nmod common;\n\n#[test]\nfn test_add() {\n    // 使用共用模块。\n    common::setup();\n    assert_eq!(adder::add(3, 2), 5);\n}\n")])])]),e("p",[t._v("带有共用代码的模块遵循和普通的"),e("RouterLink",{attrs:{to:"/mod.html"}},[t._v("模块")]),t._v("一样的规则，所以完全可以把公共模块\n写在 "),e("code",[t._v("tests/common/mod.rs")]),t._v(" 文件中。")],1)])}),[],!1,null,null,null);s.default=n.exports}}]);