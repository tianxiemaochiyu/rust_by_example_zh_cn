(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{500:function(t,r,e){"use strict";e.r(r);var a=e(4),s=Object(a.a)({},(function(){var t=this,r=t.$createElement,e=t._self._c||r;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"构建脚本"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#构建脚本"}},[t._v("#")]),t._v(" 构建脚本")]),t._v(" "),e("p",[t._v("有时使用 "),e("code",[t._v("cargo")]),t._v(" 正常构建还是不够的。也许你的 crate 在 cargo 成功编译之前需要一些先决条件，比如代码生成或者需要编译的一些本地代码。为了解决这个问题，我们构建了 cargo 可以运行的脚本。")]),t._v(" "),e("p",[t._v("要向包中添加构建脚本，可以在 "),e("code",[t._v("Cargo.toml")]),t._v(" 中指定它，如下所示：")]),t._v(" "),e("div",{staticClass:"language-toml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-toml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("package")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key property"}},[t._v("build")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"build.rs"')]),t._v("\n")])])]),e("p",[t._v("跟默认情况不同，这里 cargo 将在项目目录中优先查找 "),e("code",[t._v("build.rs")]),t._v(" 文件。（本句采用意译，英文原文为：Otherwise Cargo will look for a "),e("code",[t._v("build.rs")]),t._v(" file in the project directory by default.）")]),t._v(" "),e("h2",{attrs:{id:"怎么使用构建脚本"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#怎么使用构建脚本"}},[t._v("#")]),t._v(" 怎么使用构建脚本")]),t._v(" "),e("p",[t._v("构建脚本只是另一个 Rust 文件，此文件将在编译包中的任何其他内容之前，优先进行编译和调用。 因此，此文件可实现满足 crate 的先决条件。")]),t._v(" "),e("p",[t._v("cargo 通过"),e("a",{attrs:{href:"https://doc.rust-lang.org/cargo/reference/environment-variables.html#environment-variables-cargo-sets-for-build-scripts",target:"_blank",rel:"noopener noreferrer"}},[t._v("此处指定"),e("OutboundLink")],1),t._v("的可以使用的环境变量为脚本提供输入。（英文原文：Cargo provides the script with inputs via environment variables "),e("a",{attrs:{href:"https://doc.rust-lang.org/cargo/reference/environment-variables.html#environment-variables-cargo-sets-for-build-scripts",target:"_blank",rel:"noopener noreferrer"}},[t._v("specified\nhere"),e("OutboundLink")],1),t._v(" that can be used.）")]),t._v(" "),e("p",[t._v("此脚本通过 stdout （标准输出）提供输出。打印的所有行都写入到 "),e("code",[t._v("target/debug/build/<pkg>/output")]),t._v("。另外，以 "),e("code",[t._v("cargo:")]),t._v(" 为前缀的行将由 cargo 直接解析，因此可用于定义包编译的参数。")]),t._v(" "),e("p",[t._v("有关进一步的说明和示例，请阅读 "),e("a",{attrs:{href:"https://doc.rust-lang.org/cargo/reference/build-scripts.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("cargo 规定说明文档"),e("OutboundLink")],1),t._v("。")])])}),[],!1,null,null,null);r.default=s.exports}}]);