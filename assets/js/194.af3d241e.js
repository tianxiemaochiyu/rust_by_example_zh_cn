(window.webpackJsonp=window.webpackJsonp||[]).push([[194],{673:function(n,i,e){"use strict";e.r(i);var t=e(4),l=Object(t.a)({},(function(){var n=this,i=n.$createElement,e=n._self._c||i;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("h1",{attrs:{id:"作用域和掩蔽"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#作用域和掩蔽"}},[n._v("#")]),n._v(" 作用域和掩蔽")]),n._v(" "),e("p",[n._v("变量绑定有一个作用域（scope），它被限定只在一个"),e("strong",[n._v("代码块")]),n._v("（block）中生存（live）。\n代码块是一个被 "),e("code",[n._v("{}")]),n._v(" 包围的语句集合。另外也允许"),e("a",{attrs:{href:"https://en.wikipedia.org/wiki/Variable_shadowing",target:"_blank",rel:"noopener noreferrer"}},[n._v("变量掩蔽"),e("OutboundLink")],1),n._v("（variable\nshadowing）。")]),n._v(" "),e("div",{staticClass:"language-rust,editable,ignore,mdbook-runnable extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('fn main() {\n    // 此绑定生存于 main 函数中\n    let long_lived_binding = 1;\n\n    // 这是一个代码块，比 main 函数拥有更小的作用域\n    {\n        // 此绑定只存在于本代码块\n        let short_lived_binding = 2;\n\n        println!("inner short: {}", short_lived_binding);\n\n        // 此绑定*掩蔽*了外面的绑定\n        let long_lived_binding = 5_f32;\n\n        println!("inner long: {}", long_lived_binding);\n    }\n    // 代码块结束\n\n    // 报错！`short_lived_binding` 在此作用域上不存在\n    println!("outer short: {}", short_lived_binding);\n    // 改正 ^ 注释掉这行\n\n    println!("outer long: {}", long_lived_binding);\n\n    // 此绑定同样*掩蔽*了前面的绑定\n    let long_lived_binding = \'a\';\n\n    println!("outer long: {}", long_lived_binding);\n}\n')])])])])}),[],!1,null,null,null);i.default=l.exports}}]);